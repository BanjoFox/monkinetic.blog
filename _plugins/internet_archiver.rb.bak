require 'http'

re = /\[.*?\]\((.*?)\)/
ia_request_base = "http://web.archive.org/save"

def archiverize_links(payload)
  content = payload.page.content
  site = payload.site

  out_content = "#{content}"
  content.scan re do |m|
    url = m[0]
    puts "Found url: #{url}"

    wa_save_url = "#{ ia_request_base }/#{url}"
    puts "...using save url: #{wa_save_url}"

    if site.key?('web_archiver')
      proxy_host = site['web_archiver']['proxy_host']
      proxy_port = site['web_archiver']['proxy_port']
      client = HTTP.via(proxy_host, proxy_port)
    else
      client = HTTP
    end

    resp = client.headers(:accept => "application/json")
                 .get(wa_save_url)
    wa_location = resp.headers['Content-Location']
    wa_url = "http://web.archive.org#{wa_location}"

    out_content.gsub! url, wa_url
  end
  return out_content
end

Jekyll::Hooks.register :posts, :pre_render do |post, payload|
  post.content = archiverize_links(payload)
end
